buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        //jhipster-needle-gradle-buildscript-dependency - JHipster will add additional gradle build script plugins here
    }
}

plugins {
    id 'java'
    id 'io.quarkus'
    id "idea"
    id 'checkstyle'
    id "maven-publish"
    id "jacoco"
    id "com.gorylenko.gradle-git-properties"
    id "com.github.node-gradle.node"
    id "net.ltgt.apt-eclipse"
    id "net.ltgt.apt-idea"
    id "net.ltgt.apt"
    id "org.liquibase.gradle"
    id "org.sonarqube"
    //jhipster-needle-gradle-plugins - JHipster will add additional gradle plugins here
}

node {
    download = true
}


group = "org.manage"
version = "0.0.2-SNAPSHOT"

description = ""

sourceCompatibility = 11
targetCompatibility = 11
assert System.properties["java.specification.version"] == "1.8" || "11" || "12" || "13"

apply from: "gradle/docker.gradle"
apply from: "gradle/sonar.gradle"
//jhipster-needle-gradle-apply-from - JHipster will add additional gradle scripts to be applied here

if (project.hasProperty("prod") || project.hasProperty("gae")) {
    apply from: "gradle/profile_prod.gradle"
} else {
    apply from: "gradle/profile_dev.gradle"
}

idea {
    module {
        excludeDirs += files("node_modules")
    }
}

eclipse {
    sourceSets {
        main {
            java {
                srcDirs += ["build/generated/sources/annotationProcessor/java/main"]
            }
        }
    }
}

defaultTasks "quarkusDev"

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
    useJUnitPlatform()
    exclude "**/*IT*", "**/*IntTest*"

    testLogging {
        events 'FAILED', 'SKIPPED'
    }
    // uncomment if the tests reports are not generated
    // see https://github.com/jhipster/generator-jhipster/pull/2771 and https://github.com/jhipster/generator-jhipster/pull/4484
    // ignoreFailures true
    reports.html.enabled = false
}

task integrationTest(type: Test) {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
    useJUnitPlatform()
    description = "Execute integration tests."
    group = "verification"
    include "**/*IT*", "**/*IntTest*"

    testLogging {
        events 'FAILED', 'SKIPPED'
    }
    // uncomment if the tests reports are not generated
    // see https://github.com/jhipster/generator-jhipster/pull/2771 and https://github.com/jhipster/generator-jhipster/pull/4484
    // ignoreFailures true
    reports.html.enabled = false
}

check.dependsOn integrationTest
task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn test
}

task integrationTestReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn integrationTest
}

if (!project.hasProperty("runList")) {
    project.ext.runList = "main"
}

project.ext.diffChangelogFile = "src/main/resources/config/liquibase/changelog/" + new Date().format("yyyyMMddHHmmss") + "_changelog.xml"

liquibase {
    activities {
        main {
            changeLogFile project.ext.diffChangelogFile
            url "jdbc:h2:file:./build/classes/java/main/build/h2db/db/imanagestuff;DB_CLOSE_DELAY=-1"
            username "imanagestuff"
            password ""
            //driver "org.h2.Driver"

            //referenceDriver "liquibase.ext.hibernate.database.connection.HibernateDriver"
            referenceUrl "hibernate:spring:org.manage.domain?dialect=io.quarkus.hibernate.orm.runtime.dialect.QuarkusPostgreSQL10Dialect" +
                    "&hibernate.physical_naming_strategy=org.manage.config.hibernate.JHipsterCompatiblePhysicalNamingStrategy" +
                "&hibernate.implicit_naming_strategy=org.manage.config.hibernate.JHipsterCompatibleImplicitNamingStrategy"

            logLevel "debug"
            classpath "$buildDir/classes/java/main"
        }
    }
    runList = project.ext.runList
}

gitProperties {
    failOnNoGitDirectory = false
    keys = ["git.branch", "git.commit.id.abbrev", "git.commit.id.describe"]
}

checkstyle {
    toolVersion "${checkstyle_version}"
    configFile file("checkstyle.xml")
    checkstyleTest.enabled = false
}

repositories {
    mavenLocal()
    mavenCentral()
    //jhipster-needle-gradle-repositories - JHipster will add additional repositories
}

dependencies {
    implementation 'io.quarkus:quarkus-container-image-jib'
    implementation 'io.quarkus:quarkus-arc'
    implementation "io.quarkus:quarkus-undertow"
    implementation "io.quarkus:quarkus-resteasy"
    implementation "io.quarkus:quarkus-resteasy-jsonb"
    implementation "io.quarkus:quarkus-resteasy-qute"
    implementation "io.quarkus:quarkus-mailer"
    implementation "io.quarkus:quarkus-hibernate-orm-panache"
    implementation "io.quarkus:quarkus-hibernate-validator"
    implementation "io.quarkus:quarkus-liquibase"
    implementation "org.liquibase:liquibase-core"
    implementation "io.quarkus:quarkus-jdbc-postgresql"
    implementation "io.quarkus:quarkus-jdbc-h2"
    implementation "io.quarkus:quarkus-test-h2"
    implementation "io.quarkus:quarkus-elytron-security"
    implementation "io.quarkus:quarkus-smallrye-jwt"
    implementation "io.quarkus:quarkus-smallrye-openapi"
    implementation "io.quarkus:quarkus-smallrye-health"
    implementation "io.quarkus:quarkus-tika"
    implementation "io.quarkus:quarkus-rest-client"
    implementation("io.quarkus:quarkus-scheduler")
    implementation "org.mapstruct:mapstruct:${mapstruct_version}"
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")

    liquibaseRuntime sourceSets.main.compileClasspath
    //liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
    liquibaseRuntime sourceSets.main.output
    //liquibaseRuntime 'org.liquibase:liquibase-core:4.1.1'
    //liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:2.1.1'
    //liquibaseRuntime 'org.postgresql:postgresql:42.2.16'
    liquibaseRuntime "org.liquibase.ext:liquibase-hibernate5:${liquibase_hibernate5_version}"
    //liquibaseRuntime 'ch.qos.logback:logback-core:1.2.3'
    //liquibaseRuntime 'ch.qos.logback:logback-classic:1.2.3'
    liquibaseRuntime 'org.springframework.data:spring-data-jpa:2.3.4.RELEASE'
    //liquibaseRuntime group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    //liquibaseRuntime "io.quarkus:quarkus-jdbc-h2"

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"

    testImplementation "io.quarkus:quarkus-junit5"
    testImplementation "io.quarkus:quarkus-junit5-mockito"
    testImplementation "io.rest-assured:rest-assured"
    testImplementation "org.assertj:assertj-core"
    testImplementation "com.tngtech.archunit:archunit-junit5-api:${archunit_junit5_version}"

    //Adding the engine dependency to the surefire-plugin unfortunately does not work in the current version.
    //https://www.archunit.org/userguide/html/000_Index.html#_junit_5
    testImplementation "com.tngtech.archunit:archunit-junit5-engine:${archunit_junit5_version}"

    //jhipster-needle-gradle-dependency - JHipster will add additional dependencies here
}
quarkusBuild {
    nativeArgs {
        containerBuild = true
        addAllCharsets = true
        buildImage = "quay.io/quarkus/ubi-quarkus-native-image:20.1.0-java11"
    }
}
task cleanResources(type: Delete) {
    delete "build/resources"
}

//wrapper {
//    gradleVersion = "6.5"
//}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}


if (project.hasProperty("nodeInstall")) {
    node {
        version = "${node_version}"
        npmVersion = "${npm_version}"
        yarnVersion = "${yarn_version}"
        download = true
    }
}
compileJava.dependsOn processResources

